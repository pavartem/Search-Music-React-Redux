import {
    SEARCH_START,
    SEARCH_SUCCESS,
    SEARCH_FAILURE
} from 'actionTypes'


function onlyUnique(value, index, self) {
    return self.indexOf(value) === index;
}

export const search = word => async dispatch => {
    try {
        if (word)
        return fetch(`http://ws.audioscrobbler.com/2.0/?method=track.search&track=${word}&api_key=f05fdcadf9e5d59eecfda355c783aba9&format=json`)
            .then(response => response.json())
            .then(data => data.results.trackmatches.track.slice(0,7).filter(onlyUnique))
            .then(trackName => {dispatch({type: SEARCH_SUCCESS, payload: trackName})});
    } catch (err) {
        dispatch({
            type: SEARCH_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const firstEdit = () => async dispatch => {
    dispatch({type: SEARCH_START})
}